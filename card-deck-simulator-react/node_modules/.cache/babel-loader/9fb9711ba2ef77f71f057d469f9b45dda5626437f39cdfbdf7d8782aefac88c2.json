{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IAVal\\\\OneDrive\\\\Desktop\\\\GitHub\\\\IAValentine-Portfolio\\\\card-deck-simulator-react\\\\src\\\\deck.tsx\",\n  _s = $RefreshSig$();\n// Below is importing the necessary modules from React.\nimport React, { useState } from 'react';\n\n// Below is importing the Card and Button components from './card' and './button' respectively.\nimport Card from './card';\nimport Button from './button';\n\n// Below defines the suits and ranks for the deck of cards.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUITS = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\nconst RANKS = ['2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 ', '10 ', 'J ', 'Q ', 'K ', 'A '];\n\n// Below is a function that generates a deck of cards.\nfunction generateDeck() {\n  const deck = [];\n  for (const suit of SUITS) {\n    for (const rank of RANKS) {\n      deck.push({\n        suit,\n        rank\n      });\n    }\n  }\n  return deck;\n}\n\n// Deck component\nfunction Deck() {\n  _s();\n  // State hooks for deck and drawn cards.\n  const [deck, setDeck] = useState(generateDeck());\n  const [drawnCards, setDrawnCards] = useState([]);\n\n  // Below is a function to shuffle the deck.\n  const shuffleDeck = () => {\n    setDeck(prevDeck => {\n      const shuffleDeck = [...prevDeck];\n      shuffleDeck.sort(() => Math.random() - 0.5);\n      return shuffleDeck;\n    });\n    setDrawnCards([]); // Clears the drawn cards.\n  };\n\n  // Below is a function to draw a card from the deck.\n  const drawCard = () => {\n    if (deck.length === 0) {\n      alert('No cards left in the deck!');\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * deck.length);\n    const card = deck[randomIndex];\n    setDrawnCards(prevDrawnCards => [...prevDrawnCards, card]);\n    setDeck(prevDeck => prevDeck.filter((c, index) => index !== randomIndex));\n  };\n\n  // Below is a function to show the total card count in the deck.\n  const showCardCount = () => {\n    alert(`Total cards remaining in the deck: ${deck.length}`);\n  };\n\n  // Below is rendering the Deck component.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Deck\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: shuffleDeck,\n      children: \"Shuffle Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: drawCard,\n      children: \"Draw Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: showCardCount,\n      children: \"Show Card Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardArea\",\n      children: drawnCards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        suit: card.suit,\n        rank: card.rank\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n// Below is exporting the Deck component as the default export.\n_s(Deck, \"QO8Re7EQt7EkeeyVK+DE1EnUiCw=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useState","Card","Button","jsxDEV","_jsxDEV","SUITS","RANKS","generateDeck","deck","suit","rank","push","Deck","_s","setDeck","drawnCards","setDrawnCards","shuffleDeck","prevDeck","sort","Math","random","drawCard","length","alert","randomIndex","floor","card","prevDrawnCards","filter","c","index","showCardCount","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/IAVal/OneDrive/Desktop/GitHub/IAValentine-Portfolio/card-deck-simulator-react/src/deck.tsx"],"sourcesContent":["// Below is importing the necessary modules from React.\r\nimport React, { useState } from 'react';\r\n\r\n// Below is importing the Card and Button components from './card' and './button' respectively.\r\nimport Card from './card';\r\nimport Button from './button';\r\n\r\n// Below defines the suits and ranks for the deck of cards.\r\nconst SUITS = ['Hearts', 'Diamonds', 'Clubs', 'Spades'];\r\nconst RANKS = ['2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 ', '10 ', 'J ', 'Q ', 'K ', 'A '];\r\n\r\n// Below is a function that generates a deck of cards.\r\nfunction generateDeck() {\r\n  const deck = [];\r\n  for (const suit of SUITS) {\r\n    for (const rank of RANKS) {\r\n      deck.push({ suit, rank });\r\n    }\r\n  }\r\n  return deck;\r\n}\r\n\r\n// Deck component\r\nfunction Deck() {\r\n  // State hooks for deck and drawn cards.\r\n  const [deck, setDeck] = useState(generateDeck());\r\n  const [drawnCards, setDrawnCards] = useState([]);\r\n\r\n  // Below is a function to shuffle the deck.\r\n  const shuffleDeck = () => {\r\n    setDeck((prevDeck) => {\r\n      const shuffleDeck = [...prevDeck];\r\n      shuffleDeck.sort(() => Math.random() - 0.5);\r\n      return shuffleDeck;\r\n    });\r\n    setDrawnCards([]); // Clears the drawn cards.\r\n  };\r\n\r\n  // Below is a function to draw a card from the deck.\r\n  const drawCard = () => {\r\n    if (deck.length === 0) {\r\n      alert('No cards left in the deck!');\r\n      return;\r\n    }\r\n    const randomIndex = Math.floor(Math.random() * deck.length);\r\n    const card = deck[randomIndex];\r\n    setDrawnCards((prevDrawnCards) => [...prevDrawnCards, card]);\r\n    setDeck((prevDeck) => prevDeck.filter((c, index) => index !== randomIndex));\r\n  };\r\n\r\n  // Below is a function to show the total card count in the deck.\r\n  const showCardCount = () => {\r\n    alert(`Total cards remaining in the deck: ${deck.length}`);\r\n  };\r\n\r\n  // Below is rendering the Deck component.\r\n  return (\r\n    <div className=\"Deck\">\r\n      <Button onClick={shuffleDeck}>Shuffle Deck</Button>\r\n      <Button onClick={drawCard}>Draw Card</Button>\r\n      <Button onClick={showCardCount}>Show Card Count</Button> {/* New button for showing card count */}\r\n      <div className=\"CardArea\">\r\n        {/* Below is mapping over drawn cards and rendering Card components */}\r\n        {drawnCards.map((card, index) => (\r\n          <Card key={index} suit={card.suit} rank={card.rank} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Below is exporting the Deck component as the default export.\r\nexport default Deck;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}